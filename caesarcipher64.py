# Makes base 64
def encode64(m):
    alph = ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z','a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','0','1','2','3','4','5','6','7','8','9','+','/']
    # number 00, 01, 02, 03, 04, 05, 06, 07, 08, 09, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,27, 28, 29, 30, 31, 
    base64 = range(0,64)
    m_num = [0 for i in range(0,len(m))]
    i=0
    while i < len(m):
        j=0
        while j <= 63:
            if m[i] == alph[j]:
                m_num[i] = base64[j]
            j = j + 1
        i = i+1
    return m_num

#Rolls Base 64 
def caesarRoll(c,t):
    i = 0
    if t <= 64:
        while i < len(c):
            c[i] = (c[i] + t )%64
            i = i+1       
    else:
        pass
    return c

# 6 bytes to 8 bytes
def changeBinary(m_num):
    #bin String function
    get_bin = lambda x, n: format(x, 'b').zfill(n)
    
    #convert to binary string
    m_bin = get_bin(m_num[0],6)

    i = 1
    while i < len(m_num):
       m_bin = m_bin + get_bin(m_num[i],6)
       i = i+1 
       # New binary
    c = [m_bin[i:i+8] for i in range(0, len(m_bin), 8)]
    i = 0
    while i < len(c):
        c[i] = int(c[i],2)
        i = i+1
    return c

# Changes numbers to letters
def decodeASCII(m_num):
    m = [0 for i in range(0,len(m_num))]
    i=0
    while i < len(m_num):
        m[i] = chr(m_num[i])
        i = i+1
    return m

# Full function
def decodeCaesar(data,t):
    m_t = encode64(data)
    m = caesarRoll(m_t,t)
    m = changeBinary(m)
    p = decodeASCII(m)
    return p

# Runs it Repeatedly
def runCaesar(c):
    i = 0
    while i < 64:
        m = decodeCaesar(c,i)
        print(m,i)
        i = i+1
    return i

#with open('assignment-1-d-enc.txt', "rb") as data:
   # decodeCaesar(data,55)


#print(runCaesar('oZ04bYkMsJoFV3cs'))
print(decodeCaesar('IGsIBJJZbtiSap',55))
print(decodeCaesar('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RLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJpRLJp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',55))




